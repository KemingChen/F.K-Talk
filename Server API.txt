* type => 0[FKTalk], 1[FB], 2[Google]

/login
	type, arg{{phone, password} | FBToken | GoogleToken}, gcmRegId
	
	response Success
		{token, photo, phone, name, mail, type, arg}
	
	response Fail
		{error}

/signup
	photo, phone, name, mail, type, arg{password | FBID | googleID}

	response Success
		{}

	response Fail
		{error}

/bind
	token, type, arg
	
	response Success
		{}

	response Fail
		{error}

/setting
	token, photo, name, mail, password

	response Success
		{}

	response Fail
		{error}

/addFriends
	token, type, args[arg, arg, ...]
	
	response Success
		MQTT{ // 要對 "加入方" 跟 "被加方" 都要送相對應的訊息
			action: "updateFriends",
			data: [{name, phone, photo, mail, hasReadMsgId}, {...}, ...]
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}
	
/listFriends
	token

	response Success
		MQTT{ 
			action: "listFriends",
			data: [{name, phone, photo, mail, hasReadMsgId}, {...}, ...]
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}

/delFriend
	token, phone

	response Success
		MQTT{ // 要對 "刪除方" 跟 "被刪除方" 都要送相對應的訊息
			action: "deleteFriend",
			data: "phone"
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}

/listCounter
	token
	
	response Success
		MQTT{
			action: "updateCounter",
			data: [{phone, counter}, ...]
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}

/sendMsg
	token, phone, message

	response Success
		MQTT{ // 要對 "送方" 跟 "被送方" 都要送一樣的訊息
			action: "addMsg",
			data: {phone, Msg: {messageId, sender, receiver, message, timestamp}}
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}

/readMsg
	token, phone, hasReadMsgId

	response Success
		MQTT{
			action: "hasRead",
			data: {phone, hasReadMsgId}
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}

/listMsg
	token, phone

	response Success
		MQTT{ // 只要給 SP 即可
			action: "listMsg",
			data: {phone, Msgs: [{messageId, sender, receiver, message, timestamp}, ...]}
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}

/listPublisher
	token
	
	response Success
		MQTT{
			action: "listPublisher",
			data: [{pId, name}, ...]
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}

/subscribePublisher
	token, pId
	
	response Success
		MQTT{
			action: "listPublisher",
			data: [{pId, name}, ...]
		}

	response Fail
		MQTT{
			action: "error",
			data: "Error Msg"
		}

PublishMsg // Server 用API
	MQTT{
		action: "getPublisherMsg",
		data: [{pmId, name, message, timestamp}, ...]
	}